struct OPENFILENAME{
  DWORD        lStructSize;
  HWND         hwndOwner;
  HINSTANCE    hInstance;
  LPCSTR       lpstrFilter;
  LPSTR        lpstrCustomFilter;
  DWORD        nMaxCustFilter;
  DWORD        nFilterIndex;
  LPSTR        lpstrFile;
  DWORD        nMaxFile;
  LPSTR        lpstrFileTitle;
  DWORD        nMaxFileTitle;
  LPCSTR       lpstrInitialDir;
  LPCSTR       lpstrTitle;
  DWORD        Flags;
  WORD         nFileOffset;
  WORD         nFileExtension;
  LPCSTR       lpstrDefExt;
  LPARAM       lCustData;
  dword lpfnHook;
  LPCSTR       lpTemplateName;
#ifdef _MAC
  dword   lpEditInfo;
  LPCSTR       lpstrPrompt;
#endif
#if (_WIN32_WINNT >= 0x0500)
  void *        pvReserved;
  DWORD        dwReserved;
  DWORD        FlagsEx;
#endif
};
#define OPENFILENAMEW OPENFILENAME
#define OPENFILENAMEA OPENFILENAME

extern WINAPI "comdlg32.dll"{
        BOOL GetOpenFileNameA(dword);
        BOOL GetOpenFileNameW(dword);
        BOOL GetSaveFileNameA(dword);
        BOOL GetSaveFileNameW(dword);
        short GetFileTitleA(LPCSTR, LPSTR, WORD);
        short GetFileTitleW(LPCWSTR, LPWSTR, WORD);
}

#define GetOpenFileName  GetOpenFileNameA
#define GetSaveFileName  GetSaveFileNameA
#define GetFileTitle  GetFileTitleA

#define OFN_READONLY                 0x00000001
#define OFN_OVERWRITEPROMPT          0x00000002
#define OFN_HIDEREADONLY             0x00000004
#define OFN_NOCHANGEDIR              0x00000008
#define OFN_SHOWHELP                 0x00000010
#define OFN_ENABLEHOOK               0x00000020
#define OFN_ENABLETEMPLATE           0x00000040
#define OFN_ENABLETEMPLATEHANDLE     0x00000080
#define OFN_NOVALIDATE               0x00000100
#define OFN_ALLOWMULTISELECT         0x00000200
#define OFN_EXTENSIONDIFFERENT       0x00000400
#define OFN_PATHMUSTEXIST            0x00000800
#define OFN_FILEMUSTEXIST            0x00001000
#define OFN_CREATEPROMPT             0x00002000
#define OFN_SHAREAWARE               0x00004000
#define OFN_NOREADONLYRETURN         0x00008000
#define OFN_NOTESTFILECREATE         0x00010000
#define OFN_NONETWORKBUTTON          0x00020000
#define OFN_NOLONGNAMES              0x00040000     // force no long names for 4.x modules
#define OFN_EXPLORER                 0x00080000     // new look commdlg
#define OFN_NODEREFERENCELINKS       0x00100000
#define OFN_LONGNAMES                0x00200000     // force long names for 3.x modules
#define OFN_ENABLEINCLUDENOTIFY      0x00400000     // send include message to callback
#define OFN_ENABLESIZING             0x00800000
#define OFN_DONTADDTORECENT          0x02000000
#define OFN_FORCESHOWHIDDEN          0x10000000    // Show All files including System and hidden files

//FlagsEx Values
#define  OFN_EX_NOPLACESBAR         0x00000001

// Return values for the registered message sent to the hook function
// when a sharing violation occurs.  OFN_SHAREFALLTHROUGH allows the
// filename to be accepted, OFN_SHARENOWARN rejects the name but puts
// up no warning (returned when the app has already put up a warning
// message), and OFN_SHAREWARN puts up the default warning message
// for sharing violations.
// Note:  Undefined return values map to OFN_SHAREWARN, but are
//        reserved for future use.

#define OFN_SHAREFALLTHROUGH     2
#define OFN_SHARENOWARN          1
#define OFN_SHAREWARN            0
#define LPCFHOOKPROC dword
struct CHOOSEFONT{
  DWORD           lStructSize;
  HWND            hwndOwner;          // caller's window handle
  HDC             hDC;                // printer DC/IC or NULL
  dword      lpLogFont;          // ptr. to a LOGFONT struct
  INT             iPointSize;         // 10 * size in points of selected font
  DWORD           Flags;              // enum. type flags
  COLORREF        rgbColors;          // returned text color
  LPARAM          lCustData;          // data passed to hook fn.
  LPCFHOOKPROC    lpfnHook;           // ptr. to hook function
  LPCSTR          lpTemplateName;     // custom template name
  HINSTANCE       hInstance;          // instance handle of.EXE that
                                      //   contains cust. dlg. template
  LPSTR           lpszStyle;          // return the style field here
                                      // must be LF_FACESIZE or bigger
  WORD            nFontType;          // same value reported to the EnumFonts
                                      //   call back with the extra FONTTYPE_
                                      //   bits added
  WORD            ___MISSING_ALIGNMENT__;
  INT             nSizeMin;           // minimum pt size allowed &
  INT             nSizeMax;           // max pt size allowed if
                                      //   CF_LIMITSIZE is used
};
#define CHOOSEFONTW CHOOSEFONT
#define CHOOSEFONTA CHOOSEFONT

extern WINAPI "comdlg32.dll"{
        BOOL ChooseFontA(dword);
        BOOL ChooseFontW(dword);
}
#ifdef UNICODE
#define ChooseFont  ChooseFontW
#else
#define ChooseFont  ChooseFontA
#endif // !UNICODE

#define CF_SCREENFONTS             0x00000001
#define CF_PRINTERFONTS            0x00000002
#define CF_BOTH                    CF_SCREENFONTS | CF_PRINTERFONTS
#define CF_SHOWHELP                0x00000004L
#define CF_ENABLEHOOK              0x00000008L
#define CF_ENABLETEMPLATE          0x00000010L
#define CF_ENABLETEMPLATEHANDLE    0x00000020L
#define CF_INITTOLOGFONTSTRUCT     0x00000040L
#define CF_USESTYLE                0x00000080L
#define CF_EFFECTS                 0x00000100L
#define CF_APPLY                   0x00000200L
#define CF_ANSIONLY                0x00000400L
#define CF_SCRIPTSONLY             CF_ANSIONLY
#define CF_NOVECTORFONTS           0x00000800L
#define CF_NOOEMFONTS              CF_NOVECTORFONTS
#define CF_NOSIMULATIONS           0x00001000L
#define CF_LIMITSIZE               0x00002000L
#define CF_FIXEDPITCHONLY          0x00004000L
#define CF_WYSIWYG                 0x00008000L // must also have CF_SCREENFONTS & CF_PRINTERFONTS
#define CF_FORCEFONTEXIST          0x00010000L
#define CF_SCALABLEONLY            0x00020000L
#define CF_TTONLY                  0x00040000L
#define CF_NOFACESEL               0x00080000L
#define CF_NOSTYLESEL              0x00100000L
#define CF_NOSIZESEL               0x00200000L
#define CF_SELECTSCRIPT            0x00400000L
#define CF_NOSCRIPTSEL             0x00800000L
#define CF_NOVERTFONTS             0x01000000L

#define LPPAGEPAINTHOOK unsigned int
#define LPPAGESETUPHOOK unsigned int

struct PAGESETUPDLG
{
  DWORD           lStructSize;
  HWND            hwndOwner;
  HGLOBAL         hDevMode;
  HGLOBAL         hDevNames;
  DWORD           Flags;
  POINT           ptPaperSize;
  RECT            rtMinMargin;
  RECT            rtMargin;
  HINSTANCE       hInstance;
  LPARAM          lCustData;
  LPPAGESETUPHOOK lpfnPageSetupHook;
  LPPAGEPAINTHOOK lpfnPagePaintHook;
  LPCSTR          lpPageSetupTemplateName;
  HGLOBAL         hPageSetupTemplate;
};
#define PAGESETUPDLGW PAGESETUPDLG
#define PAGESETUPDLGA PAGESETUPDLG

extern WINAPI "comdlg32.dll"{
        BOOL PageSetupDlgA(dword);
        BOOL PageSetupDlgW(dword);
}
#ifdef UNICODE
#define PageSetupDlg  PageSetupDlgW
#else
#define PageSetupDlg  PageSetupDlgA
#endif // !UNICODE

struct PRINTDLG{
  DWORD            lStructSize;
  HWND             hwndOwner;
  HGLOBAL          hDevMode;
  HGLOBAL          hDevNames;
  HDC              hDC;
  DWORD            Flags;
  WORD             nFromPage;
  WORD             nToPage;
  WORD             nMinPage;
  WORD             nMaxPage;
  WORD             nCopies;
  HINSTANCE        hInstance;
  LPARAM           lCustData;
  LPPRINTHOOKPROC  lpfnPrintHook;
  LPSETUPHOOKPROC  lpfnSetupHook;
  LPCSTR           lpPrintTemplateName;
  LPCSTR           lpSetupTemplateName;
  HGLOBAL          hPrintTemplate;
  HGLOBAL          hSetupTemplate;
};
#define PRINTDLGW PRINTDLG
#define PRINTDLGA PRINTDLG

extern WINAPI "comdlg32.dll"{
        BOOL PrintDlgA(dword);
        BOOL PrintDlgW(dword);
}
#ifdef UNICODE
#define PrintDlg  PrintDlgW
#else
#define PrintDlg  PrintDlgA
#endif // !UNICODE

#define PD_ALLPAGES                    0x00000000
#define PD_SELECTION                   0x00000001
#define PD_PAGENUMS                    0x00000002
#define PD_NOSELECTION                 0x00000004
#define PD_NOPAGENUMS                  0x00000008
#define PD_COLLATE                     0x00000010
#define PD_PRINTTOFILE                 0x00000020
#define PD_PRINTSETUP                  0x00000040
#define PD_NOWARNING                   0x00000080
#define PD_RETURNDC                    0x00000100
#define PD_RETURNIC                    0x00000200
#define PD_RETURNDEFAULT               0x00000400
#define PD_SHOWHELP                    0x00000800
#define PD_ENABLEPRINTHOOK             0x00001000
#define PD_ENABLESETUPHOOK             0x00002000
#define PD_ENABLEPRINTTEMPLATE         0x00004000
#define PD_ENABLESETUPTEMPLATE         0x00008000
#define PD_ENABLEPRINTTEMPLATEHANDLE   0x00010000
#define PD_ENABLESETUPTEMPLATEHANDLE   0x00020000
#define PD_USEDEVMODECOPIES            0x00040000
#define PD_USEDEVMODECOPIESANDCOLLATE  0x00040000
#define PD_DISABLEPRINTTOFILE          0x00080000
#define PD_HIDEPRINTTOFILE             0x00100000
#define PD_NONETWORKBUTTON             0x00200000
#define PD_CURRENTPAGE                 0x00400000
#define PD_NOCURRENTPAGE               0x00800000
#define PD_EXCLUSIONFLAGS              0x01000000
#define PD_USELARGETEMPLATE            0x10000000
